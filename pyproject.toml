[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "israel-stewart"
version = "0.1.0"
description = "A sophisticated Python implementation of relativistic hydrodynamics using the Israel-Stewart formalism"
# readme = "README.md"
authors = [
    {name = "Relativistic Hydrodynamics Team"},
]
license = {text = "CC-BY-NC-SA-4.0"}
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Physics",
]

dependencies = [
    "numpy>=1.24.0",
    "scipy>=1.10.0",
    "sympy>=1.12",
    "matplotlib>=3.6.0",
    "numba>=0.57.0",
    "h5py>=3.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
]
jupyter = [
    "jupyter>=1.0.0",
    "jupyterlab>=4.0.0",
    "notebook>=7.0.0",
    "ipykernel>=6.25.0",
    "ipywidgets>=8.1.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
    "nbsphinx>=0.9.0",
]
all = [
    "israel-stewart[dev,jupyter,docs]"
]

[project.urls]
Homepage = "https://github.com/your-org/israel-stewart"
Repository = "https://github.com/your-org/israel-stewart"
Documentation = "https://israel-stewart.readthedocs.io"
Issues = "https://github.com/your-org/israel-stewart/issues"

[tool.hatch.build.targets.wheel]
packages = ["israel_stewart"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=israel_stewart",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "benchmark: marks tests as benchmarks",
]

[tool.coverage.run]
source = ["israel_stewart"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "NPY", # numpy-specific rules
]
ignore = [
    "E501", # line too long, handled by black
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__.py
"tests/*" = ["F401", "F811"]  # test files can have unused imports

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "scipy.*",
    "matplotlib.*",
    "numba.*",
    "h5py.*",
]
ignore_missing_imports = true
